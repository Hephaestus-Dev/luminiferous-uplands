plugins {
    id 'java'
    id 'scala'
    id 'fabric-loom' version '0.2.4-SNAPSHOT'
}

group 'robosky.mods'
version project.mod_version

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

minecraft {
}

repositories {
    mavenLocal()
    maven { url "https://minecraft.curseforge.com/api/maven" }
    maven { url "https://maven.jamieswhiteshirt.com/libs-release/" }
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}"
    modCompile "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modCompile "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modRuntime("net.fabricmc:fabric-language-scala:${project.scala_adapter_version}")  {
        exclude group: 'net.fabricmc.fabric-api'
        exclude group: 'net.fabricmc'
        exclude group: 'net.minecraft'
    }
    include "net.fabricmc:fabric-language-scala:${project.scala_adapter_version}"
    compile "org.scala-lang:scala-library:${project.scala_version}"
    compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
    modRuntime("com.jamieswhiteshirt:developer-mode:1.0.14") {
        exclude group: 'net.fabricmc.fabric-api'
        exclude group: 'net.fabricmc'
        exclude group: 'net.minecraft'
    }
    modCompile("me.shedaniel:RoughlyEnoughItems:2.9.7+build.143") {
        exclude group: 'net.fabricmc.fabric-api'
        exclude group: 'net.fabricmc'
        exclude group: 'net.minecraft'
    }
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = "sources"
    from sourceSets.main.allSource
}